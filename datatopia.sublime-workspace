{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fon",
				"font-family"
			],
			[
				"text",
				"text-align"
			],
			[
				"bot",
				"bottom"
			],
			[
				"b",
				"background"
			],
			[
				"si",
				"font-size"
			],
			[
				"wi",
				"width"
			],
			[
				"p",
				"php	<?php â€¦ ?>"
			],
			[
				"collier",
				"collier"
			]
		]
	},
	"buffers":
	[
		{
			"file": "index2.html",
			"settings":
			{
				"buffer_size": 9601,
				"line_ending": "Windows"
			}
		},
		{
			"file": "video/01.wikipedia.vtt",
			"settings":
			{
				"buffer_size": 107,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "(function( $, undefined ) {\n		\n	/*\n	 * Slider object.\n	 */\n	$.Slider 				= function( options, element ) {\n	\n		this.$el	= $( element );\n		\n		this._init( options );\n		\n	};\n	\n	$.Slider.defaults 		= {\n		current		: 0, 	// index of current slide\n		bgincrement	: 50,	// increment the bg position (parallax effect) when sliding\n		autoplay	: false,// slideshow on / off\n		interval	: 4000  // time between transitions\n    };\n	\n	$.Slider.prototype 	= {\n		_init 				: function( options ) {\n			\n			this.options 		= $.extend( true, {}, $.Slider.defaults, options );\n			\n			this.$slides		= this.$el.children('div.da-slide');\n			this.slidesCount	= this.$slides.length;\n			\n			this.current		= this.options.current;\n			\n			if( this.current < 0 || this.current >= this.slidesCount ) {\n			\n				this.current	= 0;\n			\n			}\n			\n			this.$slides.eq( this.current ).addClass( 'da-slide-current' );\n			\n			var $navigation		= $( '<nav class=\"da-dots\"/>' );\n			for( var i = 0; i < this.slidesCount; ++i ) {\n			\n				$navigation.append( '<span/>' );\n			\n			}\n			$navigation.appendTo( this.$el );\n			\n			this.$pages			= this.$el.find('nav.da-dots > span');\n			this.$navNext		= this.$el.find('span.da-arrows-next');\n			this.$navPrev		= this.$el.find('span.da-arrows-prev');\n			\n			this.isAnimating	= false;\n			\n			this.bgpositer		= 0;\n			\n			this.cssAnimations	= Modernizr.cssanimations;\n			this.cssTransitions	= Modernizr.csstransitions;\n			\n			if( !this.cssAnimations || !this.cssAnimations ) {\n				\n				this.$el.addClass( 'da-slider-fb' );\n			\n			}\n			\n			this._updatePage();\n			\n			// load the events\n			this._loadEvents();\n			\n			// slideshow\n			if( this.options.autoplay ) {\n			\n				this._startSlideshow();\n			\n			}\n			\n		},\n		_navigate			: function( page, dir ) {\n			\n			var $current	= this.$slides.eq( this.current ), $next, _self = this;\n			\n			if( this.current === page || this.isAnimating ) return false;\n			\n			this.isAnimating	= true;\n			\n			// check dir\n			var classTo, classFrom, d;\n			\n			if( !dir ) {\n			\n				( page > this.current ) ? d = 'next' : d = 'prev';\n			\n			}\n			else {\n			\n				d = dir;\n			\n			}\n				\n			if( this.cssAnimations && this.cssAnimations ) {\n				\n				if( d === 'next' ) {\n				\n					classTo		= 'da-slide-toleft';\n					classFrom	= 'da-slide-fromright';\n					++this.bgpositer;\n				\n				}\n				else {\n				\n					classTo		= 'da-slide-toright';\n					classFrom	= 'da-slide-fromleft';\n					--this.bgpositer;\n				\n				}\n				\n				this.$el.css( 'background-position' , this.bgpositer * this.options.bgincrement + '% 0%' );\n			\n			}\n			\n			this.current	= page;\n			\n			$next			= this.$slides.eq( this.current );\n			\n			if( this.cssAnimations && this.cssAnimations ) {\n			\n				var rmClasses	= 'da-slide-toleft da-slide-toright da-slide-fromleft da-slide-fromright';\n				$current.removeClass( rmClasses );\n				$next.removeClass( rmClasses );\n				\n				$current.addClass( classTo );\n				$next.addClass( classFrom );\n				\n				$current.removeClass( 'da-slide-current' );\n				$next.addClass( 'da-slide-current' );\n				\n			}\n			\n			// fallback\n			if( !this.cssAnimations || !this.cssAnimations ) {\n				\n				$next.css( 'left', ( d === 'next' ) ? '100%' : '-100%' ).stop().animate( {\n					left : '0%'\n				}, 1000, function() { \n					_self.isAnimating = false; \n				});\n				\n				$current.stop().animate( {\n					left : ( d === 'next' ) ? '-100%' : '100%'\n				}, 1000, function() { \n					$current.removeClass( 'da-slide-current' ); \n				});\n				\n			}			\n\n			this._updatePage();\n			\n		},\n		_updatePage			: function() {\n		\n			this.$pages.removeClass( 'da-dots-current' );\n			this.$pages.eq( this.current ).addClass( 'da-dots-current' );\n		\n		},\n		_startSlideshow		: function() {\n		\n			var _self	= this;\n			\n			this.slideshow	= setTimeout( function() {\n				\n				var page = ( _self.current < _self.slidesCount - 1 ) ? page = _self.current + 1 : page = 0;\n				_self._navigate( page, 'next' );\n				\n				if( _self.options.autoplay ) {\n				\n					_self._startSlideshow();\n				\n				}\n			\n			}, this.options.interval );\n		\n		},\n		page				: function( idx ) {\n			\n			if( idx >= this.slidesCount || idx < 0 ) {\n			\n				return false;\n			\n			}\n			\n			if( this.options.autoplay ) {\n			\n				clearTimeout( this.slideshow );\n				this.options.autoplay	= false;\n			\n			}\n			\n			this._navigate( idx );\n			\n		},\n		_loadEvents			: function() {\n			\n			var _self = this;\n			\n			this.$pages.on( 'click.cslider', function( event ) {\n				\n				_self.page( $(this).index() );\n				return false;\n				\n			});\n			\n			this.$navNext.on( 'click.cslider', function( event ) {\n				\n				if( _self.options.autoplay ) {\n				\n					clearTimeout( _self.slideshow );\n					_self.options.autoplay	= false;\n				\n				}\n				\n				var page = ( _self.current < _self.slidesCount - 1 ) ? page = _self.current + 1 : page = 0;\n				_self._navigate( page, 'next' );\n				return false;\n				\n			});\n			\n			this.$navPrev.on( 'click.cslider', function( event ) {\n				\n				if( _self.options.autoplay ) {\n				\n					clearTimeout( _self.slideshow );\n					_self.options.autoplay	= false;\n				\n				}\n				\n				var page = ( _self.current > 0 ) ? page = _self.current - 1 : page = _self.slidesCount - 1;\n				_self._navigate( page, 'prev' );\n				return false;\n				\n			});\n			\n			if( this.cssTransitions ) {\n			\n				if( !this.options.bgincrement ) {\n					\n					this.$el.on( 'webkitAnimationEnd.cslider animationend.cslider OAnimationEnd.cslider', function( event ) {\n						\n						if( event.originalEvent.animationName === 'toRightAnim4' || event.originalEvent.animationName === 'toLeftAnim4' ) {\n							\n							_self.isAnimating	= false;\n						\n						}	\n						\n					});\n					\n				}\n				else {\n				\n					this.$el.on( 'webkitTransitionEnd.cslider transitionend.cslider OTransitionEnd.cslider', function( event ) {\n					\n						if( event.target.id === _self.$el.attr( 'id' ) )\n							_self.isAnimating	= false;\n						\n					});\n				\n				}\n			\n			}\n			\n		}\n	};\n	\n	var logError 			= function( message ) {\n		if ( this.console ) {\n			console.error( message );\n		}\n	};\n	\n	$.fn.cslider			= function( options ) {\n	\n		if ( typeof options === 'string' ) {\n			\n			var args = Array.prototype.slice.call( arguments, 1 );\n			\n			this.each(function() {\n			\n				var instance = $.data( this, 'cslider' );\n				\n				if ( !instance ) {\n					logError( \"cannot call methods on cslider prior to initialization; \" +\n					\"attempted to call method '\" + options + \"'\" );\n					return;\n				}\n				\n				if ( !$.isFunction( instance[options] ) || options.charAt(0) === \"_\" ) {\n					logError( \"no such method '\" + options + \"' for cslider instance\" );\n					return;\n				}\n				\n				instance[ options ].apply( instance, args );\n			\n			});\n		\n		} \n		else {\n		\n			this.each(function() {\n			\n				var instance = $.data( this, 'cslider' );\n				if ( !instance ) {\n					$.data( this, 'cslider', new $.Slider( options, this ) );\n				}\n			});\n		\n		}\n		\n		return this;\n		\n	};\n	\n})( jQuery );",
			"file": "parallax/js/jquery.cslider.js",
			"file_size": 7160,
			"file_write_time": 130776346000000000,
			"settings":
			{
				"buffer_size": 6841,
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 1707,
				"line_ending": "Windows",
				"name": "*{"
			}
		},
		{
			"file": "parallax/css/style.css",
			"settings":
			{
				"buffer_size": 22593,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 381.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 571.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Github/Datatopia3.0",
		"/D/Github/Datatopia3.0/parallax",
		"/D/Github/Datatopia3.0/parallax/css",
		"/D/Github/Datatopia3.0/parallax/js"
	],
	"file_history":
	[
		"/D/Github/Datatopia3.0/video/01.wikipedia.srt",
		"/D/Github/Datatopia3.0/parallax/css/style.css",
		"/D/Github/Datatopia3.0/index3.html",
		"/D/Github/Datatopia3.0/index.html",
		"/D/Github/Datatopia3.0/jInvertScroll/examples/css/example.css",
		"/D/Github/Datatopia3.0/jInvertScroll/examples/index.htm",
		"/D/Github/Datatopia3.0/parallax/js/jquery.cslider.js",
		"/C/Users/Iz/Downloads/Minimal-jQuery-Animated-Text-Typing-Effect-Best-Typewriter/Minimal-jQuery-Animated-Text-Typing-Effect-Best-Typewriter/lib/typewriter.js",
		"/C/Users/Iz/Downloads/Minimal-jQuery-Animated-Text-Typing-Effect-Best-Typewriter/Minimal-jQuery-Animated-Text-Typing-Effect-Best-Typewriter/example/index.html",
		"/D/Github/Datatopia3.0/parallax/index.html",
		"/D/Github/Datatopia3.0/glitch.jquery.js",
		"/D/Github/Datatopia3.0/jquery.srt.js",
		"/D/Github/Datatopia3.0/son/subtiltes.srt",
		"/D/hubiC/Afip Exercices/STAGE DATATOPIA/images/simplicissimus-1897.jpg",
		"/D/Github/lessai/wp-content/themes/awaken/header.php",
		"/D/Github/lessai/lessai.sql",
		"/D/Github/lessai/wp-config.php",
		"/C/Users/Iz/Downloads/lessai.sql",
		"/D/Github/lessai/index.php",
		"/D/Github/IzzDesign/process.php",
		"/C/Users/Iz/Downloads/colorclick",
		"/D/hubiC/Afip Exercices/03.Projet Web/afiplabelgo2014/index.html",
		"/D/Github/PHP/contact.php",
		"/E/PHP/Mysql-correction/inscription.php",
		"/E/PHP/exo-cours2/indexbis.php",
		"/D/Github/PHP/inscription.php",
		"/D/Github/PHP/services.php",
		"/D/Github/PHP/index.php",
		"/D/Github/IzzDesign/index.html",
		"/C/wamp/bin/apache/apache2.4.9/conf/httpd.conf",
		"/D/hubiC/Afip Exercices/05. Cours Magistraux/PHPAfip/PHP/post.php",
		"/C/wamp/www/joomla/templates/gantry/css-compiled/fusionmenu.css",
		"/C/wamp/www/joomla/templates/gantry/css-compiled/bootstrap.css",
		"/C/wamp/www/joomla/templates/gantry/css/master-ie9.css",
		"/C/wamp/www/joomla/templates/gantry/css/master-ie8.css",
		"/C/wamp/www/joomla/templates/gantry/css/index.html",
		"/D/Github/IzzDesign/css/main.css",
		"/C/wamp/www/Mysql/index.php",
		"/C/Users/Iz/Downloads/Mysql/template.php",
		"/C/Program Files (x86)/Adobe/Adobe Flash CS6/Common/Configuration/CodeModel/codemodel_host.jar",
		"/C/Users/Iz/Documents/panier.php"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"glitchThreshold",
			"textWidth",
			"canvas",
			"img",
			"audio",
			"scrollTop",
			"hype_home",
			"localhost:8888",
			"photo1b",
			"required",
			"www",
			"JPG",
			"poils",
			"collier",
			"collie"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"localhost"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index2.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9601,
						"regions":
						{
						},
						"selection":
						[
							[
								3560,
								3560
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 988.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "video/01.wikipedia.vtt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 107,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "parallax/js/jquery.cslider.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6841,
						"regions":
						{
						},
						"selection":
						[
							[
								3453,
								3453
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2149.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1707,
						"regions":
						{
						},
						"selection":
						[
							[
								1311,
								1311
							]
						],
						"settings":
						{
							"auto_name": "*{",
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1735.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "parallax/css/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22593,
						"regions":
						{
						},
						"selection":
						[
							[
								1825,
								1825
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 901.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "datatopia.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"cont",
				"contact.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"last_filter": "izz",
		"selected_items":
		[
			[
				"izz",
				"D:\\Github\\IzzDesign\\izzdesign.sublime-project"
			],
			[
				"",
				"D:\\Github\\IzzDesign\\izzdesign.sublime-project"
			]
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 198.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
